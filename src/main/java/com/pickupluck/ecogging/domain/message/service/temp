package com.pickupluck.ecogging.domain.message.service;

public class Temp {


    /**
     * 쪽지방 생성
     */
    @Transactional
    public MessageRoomIdResponse saveMessageRoom(Long userId, MessageRoomCreateRequest request) {
        if (userId == request.getReceiverId()) {
            throw new InvalidRequestException(ErrorCode.INVALID_MESSAGE_TARGET);
        }
        User currentUser = userRepository.findById(userId)
                .orElseThrow(() -> new NotFoundException(ErrorCode.USER_NOT_FOUND));
        User receiver = userRepository.findById(request.getReceiverId())
                .orElseThrow(() -> new NotFoundException(ErrorCode.USER_NOT_FOUND));
        Post post = postRepository.findById(request.getCreatedFrom())
                .orElseThrow(() -> new NotFoundException(ErrorCode.POST_NOT_FOUND));

        MessageRoom messageRoom = MessageRoom.builder()
                .initialSender(currentUser)
                .initialReceiver(receiver)
                .createdFrom(post)
                .isAnonymous(request.getIsAnonymous())
                .build();

        MessageRoom savedMessageRoom = messageRoomRepository.save(messageRoom);
        Message message = Message.builder()
                .messageRoom(savedMessageRoom)
                .writer(currentUser)
                .content(request.getFirstMessage())
                .build();
        messageRepository.save(message);
        return new MessageRoomIdResponse(savedMessageRoom);
    }

}
